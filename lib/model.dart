class Autogenerated {
  String apikey;
  List<Data> data;
  String status;
  Info info;

  Autogenerated({ this.apikey,  this.data,  this.status,  this.info});
  factory Autogenerated.fromJson(Map<String, dynamic> json){
    return Autogenerated(
        apikey: json['apikey'],
        data: (json['data']!=null? (json['data']as List).map((e) => Data.fromJson(e)).toList():[]),
        status: json['status'],
        info: Info.fromJson( json["info"] != null ? json['info'] : '')

    );
  }
  /*factory Autogenerated.fromJson(Map<String, dynamic> json) {
    apikey = json['apikey'];
    if (json['data'] != null) {
      data = new List<Data>();
      json['data'].forEach((v) {
        data.add(new Data.fromJson(v));
      });
    }
    status = json['status'];
    info = (json['info'] != null ? new Info.fromJson(json['info']) : null)!;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['apikey'] = this.apikey;
    if (this.data != null) {
      data['data'] = this.data.map((v) => v.toJson()).toList();
    }
    data['status'] = this.status;
    if (this.info != null) {
      data['info'] = this.info.toJson();
    }
    return data;
  }*/
}

class Data {
  String id;
  String name;
  String matchType;
  String status;
  String venue;
  String date;
  String dateTimeGMT;
  List<String> teams;
  String seriesId;
  bool fantasyEnabled;
  bool bbbEnabled;
  bool hasSquad;
  bool matchStarted;
  bool matchEnded;
  List<TeamInfo> teamInfo;
  List<Score> score;

  Data(
      { this.id,
         this.name,
         this.matchType,
         this.status,
         this.venue,
         this.date,
         this.dateTimeGMT,
         this.teams,
         this.seriesId,
          this.fantasyEnabled,
         this.bbbEnabled,
         this.hasSquad,
         this.matchStarted,
         this.matchEnded,
         this.teamInfo,
         this.score});

 factory Data.fromJson(Map<String, dynamic> json) {

   print("json['id']..............................${json['id']}");
   print("json['name']..............................${json['name']}");
   print("json['matchType']..............................${json['matchType']}");
   print("json['date']..............................${json['date']}");
   return Data(
     id: json['id'],
       name: json['name'],
       matchType: json['matchType'],
       status: json['status'],
       venue: json['venue'],
       date: json['date'],
       dateTimeGMT: json['dateTimeGMT'],
       teams: json['teams'].cast<String>(),
       seriesId: json['series_id'],
       fantasyEnabled: json['fantasyEnabled'],
       bbbEnabled:  json['bbbEnabled'],
       hasSquad: json['hasSquad'],
       matchStarted: json['matchStarted'],
       matchEnded: json['matchEnded'],
       teamInfo: (json['teamInfo']!=null? (json['teamInfo']as List).map((e) => TeamInfo.fromJson(e)).toList():[]),
       score: (json['score']!=null? (json['score']as List).map((e) => Score.fromJson(e)).toList():[]),


   );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['matchType'] = this.matchType;
    data['status'] = this.status;
    data['venue'] = this.venue;
    data['date'] = this.date;
    data['dateTimeGMT'] = this.dateTimeGMT;
    data['teams'] = this.teams;
    data['series_id'] = this.seriesId;
    data['fantasyEnabled'] = this.fantasyEnabled;
    data['bbbEnabled'] = this.bbbEnabled;
    data['hasSquad'] = this.hasSquad;
    data['matchStarted'] = this.matchStarted;
    data['matchEnded'] = this.matchEnded;
    if (this.teamInfo != null) {
      data['teamInfo'] = this.teamInfo.map((v) => v.toJson()).toList();
    }
    if (this.score != null) {
      data['score'] = this.score.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class TeamInfo {
  String name;
  String shortname;
  String img;

  TeamInfo({ this.name,  this.shortname,  this.img});


factory TeamInfo.fromJson(Map<String, dynamic> json) {
  return TeamInfo(name: json['name'], shortname: json['shortname'], img: json['img']);

  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    data['shortname'] = this.shortname;
    data['img'] = this.img;
    return data;
  }
}

class Score {
  int r;
  int w;
var o;
  String inning;

  Score({ this.r,  this.w,  this.o,  this.inning});

  factory Score.fromJson(Map<String, dynamic> json) {
    return Score(r: json['r'], w: json['w'], o: json['o'], inning: json['inning']);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['r'] = this.r;
    data['w'] = this.w;
    data['o'] = this.o;
    data['inning'] = this.inning;
    return data;
  }
}

class Info {
  int hitsToday;
  int hitsUsed;
  int hitsLimit;
  int credits;
  int server;
  int offsetRows;
  int totalRows;
  double queryTime;
  int s;
  int cache;

  Info(
      { this.hitsToday,
          this.hitsUsed,
         this.hitsLimit,
          this.credits,
          this.server,
          this.offsetRows,
         this.totalRows,
         this.queryTime,
            this.s,
          this.cache});



 factory Info.fromJson(Map<String, dynamic> json) {
   return Info(hitsToday: json['hitsToday'],
       hitsUsed: json['hitsUsed'],
       hitsLimit: json['hitsLimit'],
       credits: json['credits'],
       server: json['server'],
       offsetRows:  json['offsetRows'],
       totalRows: json['totalRows'],
       queryTime: json['queryTime'],
       s: json['s'],
       cache: json['cache']);

  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['hitsToday'] = this.hitsToday;
    data['hitsUsed'] = this.hitsUsed;
    data['hitsLimit'] = this.hitsLimit;
    data['credits'] = this.credits;
    data['server'] = this.server;
    data['offsetRows'] = this.offsetRows;
    data['totalRows'] = this.totalRows;
    data['queryTime'] = this.queryTime;
    data['s'] = this.s;
    data['cache'] = this.cache;
    return data;
  }
}
